<?php

namespace iikoExchangeBundle\Library\iiko\Request;

use iikoExchangeBundle\Library\base\Config\Types\DateDiffConfigItem;
use iikoExchangeBundle\Library\base\Config\Types\DatePeriodConfigItem;
use iikoExchangeBundle\Library\base\Config\Types\IntConfigItem;
use iikoExchangeBundle\Library\iiko\Reports\iikoReportFilter;
use iikoExchangeBundle\Library\iiko\Reports\Olap\Sales\FilterFields;
use Psr\Http\Message\RequestInterface;

abstract class AbstractOlapSalesDataRequest extends AbstractOlapDataRequest
{
	const CONFIG_DATE_DAYS = 'DATE_DAYS';
	const CONFIG_DATE_DIFF = 'DATE_DIFF';


	protected function getOlapType(): string
	{
		return self::TYPE_SALES;
	}

	public function getRequest(): RequestInterface
	{
		$endPoint = (new \DateTime("-{$this->getConfigValue(self::CONFIG_DATE_DIFF)} days"))->setTime(0, 0, 0);
		$startPoint = (clone $endPoint)->modify("-{$this->getConfigValue(self::CONFIG_DATE_DAYS)} days")->setTime(23, 59, 59);

		$this->filterFields[FilterFields::OpenDateTyped] = iikoReportFilter::dateRange($startPoint->getTimestamp(), $endPoint->getTimestamp(), true, true);

		return parent::getRequest(); // TODO: Change the autogenerated stub
	}

	public function createConfig(): array
	{
		return [
			new IntConfigItem(self::CONFIG_DATE_DIFF, 0),
			new IntConfigItem(self::CONFIG_DATE_DAYS, 0)
		];
	}
}