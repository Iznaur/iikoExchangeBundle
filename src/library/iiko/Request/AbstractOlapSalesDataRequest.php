<?php

namespace iikoExchangeBundle\Library\iiko\Request;

use iikoExchangeBundle\Library\base\Config\Types\DateDiffConfigItem;
use iikoExchangeBundle\Library\base\Config\Types\DatePeriodConfigItem;
use iikoExchangeBundle\Library\iiko\Reports\iikoReportFilter;
use iikoExchangeBundle\Library\iiko\Reports\Olap\Sales\FilterFields;
use Psr\Http\Message\RequestInterface;

abstract class AbstractOlapSalesDataRequest extends AbstractOlapDataRequest
{
	const CONFIG_DATE_RANGE = 'DATE_RANGE';


	protected function getOlapType(): string
	{
		return self::TYPE_SALES;
	}

	public function getRequest(): RequestInterface
	{
		$this->filterFields[FilterFields::OpenDateTyped] = iikoReportFilter::dateRange(
			(new \DateTime($this->getConfiguration()[self::CONFIG_DATE_RANGE]->getValue()[DatePeriodConfigItem::FIELD_FROM]))->getTimestamp(),
			(new \DateTime($this->getConfiguration()[self::CONFIG_DATE_RANGE]->getValue()[DatePeriodConfigItem::FIELD_TO]))->getTimestamp()
			, true, true);

		return parent::getRequest(); // TODO: Change the autogenerated stub
	}

	public function createConfig(): array
	{
		return [
			new DatePeriodConfigItem(self::CONFIG_DATE_RANGE, json_encode([DatePeriodConfigItem::FIELD_FROM => 'today', DatePeriodConfigItem::FIELD_TO => 'today']))
		];
	}
}